---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  cleanup-pods:
    desc: Clean up pods with a Failed/Pending/Succeeded phase
    preconditions:
      - which kubectl
      - test -f "${KUBECONFIG}"
    cmds:
      - for:
          matrix:
            PHASE:
              - Failed
              - Pending
              - Succeeded
        cmd: kubectl delete pods --field-selector status.phase={{.ITEM.PHASE}} -A --ignore-not-found=true

  sync-externalsecrets:
    desc: Force sync all ExternalSecret resources
    preconditions:
      - which kubectl
      - test -f "${KUBECONFIG}"
    vars:
      SECRETS:
        sh: kubectl get externalsecret --all-namespaces --no-headers --output=jsonpath='{range .items[*]}{.metadata.namespace},{.metadata.name}{"\n"}{end}'
    cmds:
      - for:
          var: SECRETS
          split: "\n"
        cmd: kubectl --namespace {{splitList "," .ITEM | first}} annotate externalsecret {{splitList "," .ITEM | last}} force-sync="{{now | unixEpoch}}" --overwrite

  score:
    desc: Run kube-score on the current namespace
    preconditions:
      - which kubectl
      - kubectl score version
      - test -f "${KUBECONFIG}"
    vars:
      SCORE_ARGS: "--output-format=ci --ignore-container-cpu-limit --ignore-test=container-ephemeral-storage-request-and-limit --ignore-test=container-image-pull-policy --ignore-test=container-image-pull-policy --ignore-test=pod-networkpolicy"
    cmds:
      - kubectl get all -o yaml | kubectl score {{ .SCORE_ARGS }} - | grep WARNING
      - kubectl get all -o yaml | kubectl score {{ .SCORE_ARGS }} - | grep CRITICAL

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name dispatcharr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: gitops-system

  values:
    controllers:
      dispatcharr:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 2000
            runAsGroup: 2000
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: "17"
            envFrom:
              - secretRef:
                  name: dispatcharr-initdb
        containers:
          app:
            image:
              repository: ghcr.io/dispatcharr/dispatcharr
              tag: 0.10.4
            env:
              DISPATCHARR_LOG_LEVEL: info
              DISPATCHARR_PORT: &port 9191
            envFrom: &envFrom
              - configMapRef:
                  name: *name
            resources:
              requests:
                cpu: 20m
                gpu.intel.com/i915: 1
              limits:
                memory: 1Gi
                gpu.intel.com/i915: 1
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
          celery:
            image:
              repository: ghcr.io/dispatcharr/dispatcharr
              tag: 0.10.4
            command:
              - "/bin/sh"
              - "-c"
              - "cd /app &&"
              - "nice -n 5 celery -A dispatcharr worker -l info"
            envFrom: &envFrom
              - configMapRef:
                  name: *name
            resources:
              requests:
                cpu: 20m
              limits:
                memory: 1Gi
            securityContext: *securityContext

    service:
      app:
        ports:
          http:
            appProtocol: kubernetes.io/wss
            port: *port
    route:
      app:
        hostnames: ["iptv.noirprime.com"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: "dispatcharr.png"
          gethomepage.dev/name: DispatchArr
          gethomepage.dev/group: Media
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https

    persistence:
      app:
        existingClaim: *name
        advancedMounts:
          dispatcharr:
            app:
              - path: /data
            celery:
              - path: /app/data
      media:
        existingClaim: media
        globalMounts:
          - path: /media
            subPath: TVShows
      tmpfs:
        type: emptyDir
        dispatcharr:
          app:
            - path: /tmp
              subPath: tmp/app
          celery:
            - path: /tmp
              subPath: tmp/celery

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name dify-database
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: gitops-system
  maxHistory: 1
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      dify-database:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: "17"
            envFrom:
              - secretRef:
                  name: dify-database-initdb
        containers:
          plugin_daemon:
            image:
              repository: langgenius/dify-plugin-daemon
              tag: 0.3.0-local
            env:
              DB_HOST: "postgres-rw.database-system.svc.cluster.local"
              DB_PORT: "5432"
              DB_USERNAME: *name
              DB_PASSWORD: *name
              DB_DATABASE: *name
              REDIS_HOST: "dify-database-dragonfly.selfhosted-apps.svc.cluster.local"
              REDIS_PORT: "6379"
              SERVER_PORT: "5002"
              MAX_PLUGIN_PACKAGE_SIZE: "52428800"
              PPROF_ENABLED: "false"
              DIFY_INNER_API_URL: "http://dify-app.selfhosted-apps.svc.cluster.local:5001"
              PLUGIN_REMOTE_INSTALLING_HOST: "dify-database.selfhosted-apps.svc.cluster.local"
              PLUGIN_REMOTE_INSTALLING_PORT: "5003"
              PLUGIN_WORKING_PATH: "/app/storage/cwd"
              PYTHON_ENV_INIT_TIMEOUT: "-120"
              PLUGIN_MAX_EXECUTION_TIMEOUT: "600"
              PLUGIN_STORAGE_TYPE: "local"
              PLUGIN_STORAGE_LOCAL_ROOT: "/app/storage"
              PLUGIN_INSTALLED_PATH: "plugin"
              PLUGIN_PACKAGE_CACHE_PATH: "plugin_packages"
              PLUGIN_MEDIA_CACHE_PATH: "assets"
              THIRD_PARTY_SIGNATURE_VERIFICATION_ENABLED: "true"
              THIRD_PARTY_SIGNATURE_VERIFICATION_PUBLIC_KEYS: "/app/keys/publickey.pem"
              FORCE_VERIFYING_SIGNATURE: "false"
            envFrom:
              - secretRef:
                  name: *name
            resources: &resources
              requests:
                cpu: 20m
              limits:
                memory: 1Gi
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true

          sandbox:
            image:
              repository: langgenius/dify-sandbox
              tag: 0.2.12
            env:
              API_KEY: "dify-sandbox"
              GIN_MODE: "release"
              WORKER_TIMEOUT: "15"
              ENABLE_NETWORK: "true"
              HTTP_PROXY: "http://dify-database.selfhosted-apps.svc.cluster.local:3128"
              HTTPS_PROXY: "http://dify-database.selfhosted-apps.svc.cluster.local:3128"
              SANDBOX_PORT: "8194"
              PIP_MIRROR_URL: "https://pypi.tuna.tsinghua.edu.cn/simple"
            envFrom:
              - secretRef:
                  name: *name
            resources: *resources
            securityContext: *securityContext

          ssrf_proxy:
            image:
              repository: ubuntu/squid
              tag: 5.2-22.04_beta
            entrypoint:
              [
                "sh",
                "-c",
                "cp /docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$$//' /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh",
              ]
            env:
              HTTP_PORT: "3128"
              COREDUMP_DIR: "/var/spool/squid"
              REVERSE_PROXY_PORT: "8194"
              SANDBOX_HOST: "dify-database.selfhosted-apps.svc.cluster.local"
              SANDBOX_PORT: "8194"
            resources: *resources
            securityContext: *securityContext

    service:
      plugin_daemon:
        primary: true
        ports:
          daemon:
            port: 5002
          debug:
            port: 5003
      ssrf_proxy:
        ports:
          proxy:
            port: 3128
          sandbox:
            port: 8194

    persistence:
      app:
        existingClaim: *name
        advancedMounts:
          dify-database:
            plugin_daemon:
              - path: /app/storage
                subPath: plugin-daemon
      config:
        type: configMap
        name: *name
        advancedMounts:
          dify-database:
            sandbox:
              - path: /config/sandbox-config.yaml
                subPath: /conf/config.yaml
                readOnly: true
            ssrf_proxy:
              - path: /config/squid.conf.template
                subPath: /etc/squid/squid.conf.template
                readOnly: true
              - path: /config/docker-entrypoint.sh
                subPath: /docker-entrypoint-mount.sh
                readOnly: true
      tmpfs:
        type: emptyDir
        advancedMounts:
          dify-database:
            ssrf_proxy:
              - path: /var/spool/squid

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: netbox
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: gitops-system
  maxHistory: 2
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      netbox:
        annotations:
          reloader.stakater.com/auto: "true"
        pod: # this is a must for netbox
          securityContext:
            runAsNonRoot: true
            runAsUser: 999
            runAsGroup: 0
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: "17"
            envFrom:
              - secretRef:
                  name: netbox-initdb
        containers:
          app:
            image: &image
              repository: ghcr.io/netbox-community/netbox
              tag: v4.3.5
            envFrom: &envFrom
              - secretRef:
                  name: "{{ .Release.Name }}"
              - configMapRef:
                  name: "{{ .Release.Name }}"
            ports:
              - name: http
                containerPort: &port 8080
            resources: &resources
              requests:
                cpu: 15m
              limits:
                memory: 512Mi
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
          worker:
            image: *image
            command:
              - /opt/netbox/venv/bin/python
              - /opt/netbox/netbox/manage.py
              - rqworker
            envFrom: *envFrom
            resources: *resources
            securityContext: *securityContext
          housekeeping:
            image: *image
            command:
              - /opt/netbox/housekeeping.sh
            envFrom: *envFrom
            resources: *resources
            securityContext: *securityContext

    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["netbox.noirprime.com"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https

    persistence:
      app:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /opt/netbox/netbox/media
            subPath: media
          - path: /opt/netbox/netbox/reports
            subPath: reports
          - path: /opt/netbox/netbox/scripts
            subPath: scripts
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /opt/unit
            subPath: unit
          - path: /opt/unit/state
            subPath: state
          - path: /opt/unit/tmp
            subPath: tmp

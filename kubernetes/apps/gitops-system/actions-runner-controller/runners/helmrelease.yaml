---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name homelab-ops-runner
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: actions-runner-controller
  maxHistory: 2
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  driftDetection:
    mode: enabled

  values:
    githubConfigUrl: https://github.com/soulwhisper/homelab-ops
    githubConfigSecret: actions-runner-controller-github-app
    minRunners: 1
    maxRunners: 3
    containerMode:
      type: kubernetes
      kubernetesModeWorkVolumeClaim:
        accessModes: ["ReadWriteOnce"]
        storageClassName: ceph-block
        resources:
          requests:
            storage: 10Gi
    controllerServiceAccount:
      name: actions-runner-controller
      namespace: gitops-system
    template:
      spec:
        containers:
          - name: runner
            image: ghcr.io/home-operations/actions-runner:2.324.0@sha256:a8a54cd667ca1e12d05a3933b6c8b56dc84b35cdb1538db37a6623ef93ed789c
            command:
              - /homelab/runner/run.sh
            env:
              - name: ACTIONS_RUNNER_REQUIRE_JOB_CONTAINER
                value: "false"
              - name: NODE
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
              - name: HTTP_PROXY
                valueFrom:
                  configMapKeyRef:
                    name: cluster-settings
                    key: HTTP_PROXY
              - name: HTTPS_PROXY
                valueFrom:
                  configMapKeyRef:
                    name: cluster-settings
                    key: HTTPS_PROXY
              - name: NO_PROXY
                valueFrom:
                  configMapKeyRef:
                    name: cluster-settings
                    key: NO_PROXY
            volumeMounts:
              - mountPath: /var/run/secrets/talos.dev
                name: talos
                readOnly: true
        serviceAccountName: *name
        volumes:
          - name: talos
            secret:
              secretName: *name

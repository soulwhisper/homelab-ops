---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name cronjob-k8s-schemas
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: gitops-system

  values:
    controllers:
      cronjob-k8s-schemas:
        type: cronjob
        cronjob:
          schedule: "0 * * * *"
          concurrencyPolicy: "Replace"
          backoffLimit: 0
          failedJobsHistory: 1
          successfulJobsHistory: 0
        pod:
          restartPolicy: OnFailure
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
        initContainers:
          generate-schemas:
            image:
              repository: ghcr.io/bjw-s-labs/k8s-crd-extractor
              tag: 2025.10.8@sha256:18913f2044be5e0b14c22afafc2f8ed7443fc586cd469d10f8b9eee0e2bea6bb
            resources:
              requests: &requests
                cpu: 10m
              limits:
                memory: 2Gi
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
        containers:
          app:
            image:
              repository: ghcr.io/bjw-s-labs/wrangler
              tag: 4.45.1@sha256:701ba50a47a55e53c4a7a360abd07fd211df901233389d3ef88df51887907685
            env:
              - name: HTTP_PROXY
                value: "${HTTP_PROXY}"
              - name: HTTPS_PROXY
                value: "${HTTPS_PROXY}"
              - name: NO_PROXY
                value: "${NO_PROXY}"
            envFrom:
              - secretRef:
                  name: *name
            args:
              - pages
              - deploy
              - /data/crdSchemas
              - --project-name
              - kubernetes-schemas
            resources:
              requests: *requests
              limits:
                memory: 1Gi
            securityContext: *securityContext

    serviceAccount:
      cronjob-k8s-schemas: {}
    rbac:
      roles:
        cronjob-k8s-schemas:
          type: ClusterRole
          rules:
            - apiGroups: ["apiextensions.k8s.io"]
              resources:
                [
                  "customresourcedefinitions",
                  "customresourcedefinitions/status",
                ]
              verbs: ["get", "list", "watch"]
            - apiGroups: ["apiregistration.k8s.io"]
              resources: ["apiservices", "apiservices/status"]
              verbs: ["get", "list", "watch"]
      bindings:
        cronjob-k8s-schemas:
          type: ClusterRoleBinding
          roleRef:
            kind: ClusterRole
            identifier: cronjob-k8s-schemas
          subjects:
            - identifier: cronjob-k8s-schemas

    persistence:
      tmpfs:
        type: emptyDir
        advancedMounts:
          cronjob-k8s-schemas:
            generate-schemas:
              - path: /config/.datree
                subPath: data
              - path: /tmp
                subPath: tmp
            app:
              - path: /config
                subPath: config
              - path: /data
                subPath: data

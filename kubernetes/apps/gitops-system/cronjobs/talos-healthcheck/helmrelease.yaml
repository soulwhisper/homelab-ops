---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name talos-healthcheck
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: gitops-system
  maxHistory: 2
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      talos-healthcheck:
        type: cronjob
        annotations:
          k8s.cronitor.io/include: "true"
          k8s.cronitor.io/cronitor-id: "Talos"
          k8s.cronitor.io/cronitor-group: "Homelab"
          k8s.cronitor.io/tags: "K8S"
          k8s.cronitor.io/cronitor-notify: "Pushover"
        cronjob:
          schedule: "*/10 * * * *"
          concurrencyPolicy: "Replace"
          backoffLimit: 5
          activeDeadlineSeconds: 120
          failedJobsHistory: 1
          successfulJobsHistory: 0
        pod:
          restartPolicy: OnFailure
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
          nodeSelector:
            node-role.kubernetes.io/control-plane: ""
        containers:
          app:
            image:
              repository: ghcr.io/siderolabs/talosctl
              tag: latest
            args:
              - "health"
              - "--nodes=${KUBE_VIP}" # work in cluster, without dns
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 32Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true

    serviceAccount:
      talos-healthcheck: {}
    rawResources:
      talos-healthcheck:
        apiVersion: talos.dev/v1alpha1
        kind: ServiceAccount
        spec:
          spec:
            roles:
              - os:admin

    persistence:
      secrets:
        type: secret
        name: *name
        globalMounts:
          - path: /var/run/secrets/talos.dev
            readOnly: true

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name k8s-schemas
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: gitops-system
  maxHistory: 2
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      k8s-schemas:
        type: cronjob
        cronjob:
          schedule: "0 * * * *"
          concurrencyPolicy: "Replace"
        pod:
          restartPolicy: OnFailure
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
        initContainers:
          generate-schemas:
            image:
              repository: jank.ing/jjgadgets/k8s-crd-extractor
              tag: 20250130@sha256:bdc7554fa5941bc901e345511f0165a9838e52e610918a0eb1c2c195b0530ab1
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
        containers:
          app:
            image:
              repository: ghcr.io/bjw-s-labs/wrangler
              tag: 4.18.0@sha256:54ce7ef78a13f571cb011763a75e2c4b83e78d30860db9f3e370055beeec0db8
            env:
              - name: HTTP_PROXY
                value: "${HTTP_PROXY}"
              - name: HTTPS_PROXY
                value: "${HTTPS_PROXY}"
              - name: NO_PROXY
                value: "${NO_PROXY}"
            envFrom:
              - secretRef:
                  name: *name
            args:
              - pages
              - deploy
              - /data/crdSchemas
              - --project-name
              - kubernetes-schemas
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
        serviceAccount:
          identifier: *name
    persistence:
      tmpfs:
        type: emptyDir
        advancedMounts:
          k8s-schemas:
            generate-schemas:
              - path: /.datree
                subPath: data
            app:
              - path: /config
                subPath: config
              - path: /data
                subPath: data
    serviceAccount:
      k8s-schemas: {}
    rbac:
      roles:
        k8s-schemas:
          type: ClusterRole
          rules:
            - apiGroups: ["apiextensions.k8s.io"]
              resources: ["customresourcedefinitions","customresourcedefinitions/status"]
              verbs: []
            - apiGroups: ["apiregistration.k8s.io"]
              resources: ["apiservices","apiservices/status"]
              verbs: ["get","list","watch"]
      bindings:
        k8s-schemas:
          type: ClusterRoleBinding
          roleRef:
            identifier: *name
          subjects:
            - identifier: *name

---
# yaml-language-server: $schema=https://kubernetes-schemas.noirprime.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoria-metrics-cluster
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: victoria-metrics-k8s-stack
  maxHistory: 2
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    fullnameOverride: "{{ .Release.Name }}"
    victoria-metrics-operator:
      enabled: false
    defaultDashboards:
      enabled: false
    defaultRules:
      rules:
        groups:
          etcd:
            create: false
          kubernetesSystemControllerManager:
            create: false
          kubernetesSystemScheduler:
            create: false

    # : vmsingle as prometheus
    # : http://vmsingle-victoria-metrics-cluster.monitoring-system.svc.cluster.local:8429
    vmsingle:
      spec:
        retentionPeriod: "14d"
        storage:
          resources:
            requests:
              storage: 50Gi

    # : vmalert
    # : http://vmalert-victoria-metrics-cluster.monitoring-system.svc.cluster.local:8080

    # : vmagent
    # : http://vmagent-victoria-metrics-cluster.monitoring-system.svc.cluster.local:8429

    # : alertmanager
    # : http://vmalertmanager-victoria-metrics-cluster.monitoring-system.svc.cluster.local:9093
    alertmanager:
      spec:
        externalURL: https://vmalert.noirprime.com
        port: "9093"
      useManagedConfig: true
      config:
        route:
          group_by: ["alertname", "job"]
          group_interval: 10m
          group_wait: 1m
          receiver: "default"
          repeat_interval: 12h
          routes:
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor|Watchdog"
            - receiver: "default"
              matchers:
                - severity =~ "warning|critical"
        inhibitRules:
          - equal: ["alertname", "namespace"]
            sourceMatch:
              - severity = "critical"
            targetMatch:
              - severity = "warning"
        receivers:
          - name: "null"
          - name: "default"
            webhook_configs:
              - send_resolved: true
                url: http://webhook.monitoring-system.svc.cluster.local:8001?template=alertmanager

    kubeApiServer:
      vmScrape:
        spec:
          metricRelabelConfigs:
            # Drop high cardinality labels
            - action: drop
              sourceLabels: ["__name__"]
              regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
            - action: drop
              sourceLabels: ["__name__"]
              regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)

    kubelet:
      vmScrape:
        spec:
          metricRelabelConfigs:
            # Drop high-cardinality labels.
            - action: labeldrop
              regex: (uid|id|name)
            - action: drop
              sourceLabels: [__name__]
              regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
            # Optional, Drop cgroup metrics with no pod.
            - sourceLabels: [id, pod]
              action: drop
              regex: ".+;"
            # Optional, Drop less useful container blkio metrics.
            - sourceLabels: [__name__]
              action: drop
              regex: "container_blkio_device_usage_total"
            # Optional, Drop less useful container filesystem io metrics.
            - sourceLabels: [__name__]
              action: drop
              regex: "container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)"
            # Optional, Drop less useful container process metrics.
            - sourceLabels: [__name__]
              action: drop
              regex: "container_(tasks_state|threads_max)"

    # disable chart components
    grafana:
      enabled: false
    prometheus-node-exporter:
      enabled: false
    kube-state-metrics:
      enabled: false

    # disable not-used metrics scraping
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: false

    # vmalertmanager rules
    additionalVictoriaMetricsMap:
      dockerhub-rules:
        groups:
          - name: dockerhub.rules
            rules:
              - alert: DockerhubRateLimitRisk
                annotations:
                  summary: Kubernetes cluster Dockerhub rate limit risk
                expr: count(time() - container_last_seen{image=~"(docker.io).*",container!=""} < 30) > 100
                labels:
                  severity: critical
      oom-rules:
        groups:
          - name: oom.rules
            rules:
              - alert: OomKilled
                annotations:
                  summary: Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.
                expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1
                labels:
                  severity: critical
      zfs-rules:
        groups:
          - name: zfs.rules
            rules:
              - alert: ZfsUnexpectedPoolState
                annotations:
                  summary: ZFS pool {{$labels.zpool}} on {{$labels.instance}}
                    is in a unexpected state {{$labels.state}}
                expr: node_zfs_zpool_state{state!="online"} > 0
                for: 15m
                labels:
                  severity: critical

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres
spec:
  postgresVersion: 16

  metadata:
    labels:
      crunchy-userinit.ramblurr.github.com/enabled: "true"
      crunchy-userinit.ramblurr.github.com/superuser: "postgres"

  service:
    type: LoadBalancer
    metadata:
      annotations:
        external-dns.alpha.kubernetes.io/hostname: "postgres.homelab.internal"
        lbipam.cilium.io/ips: "172.19.82.203"

  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        max_wal_size: 5GB
        synchronous_commit: "on"
        pg_hba:
          - hostnossl all all 10.100.0.0/17 md5 # Needed because dbman does not support SSL yet
          - hostssl all all all md5

  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres
      replicas: &replica 3
      dataVolumeClaimSpec:
        storageClassName: ceph-block
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/data: postgres

  users:
    # Superuser
    - name: postgres
      databases:
        - postgres
      options: "SUPERUSER"
      password:
        type: AlphaNumeric
    # Applications
    - name: piped
      databases:
        - piped
      password:
        type: AlphaNumeric

  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: crunchy-postgres-secret
      global: &backupFlag
        # Global
        compress-type: "bz2"
        compress-level: "9"
        # Minio
        repo1-block: "y"
        repo1-bundle: "y"
        repo1-path: /crunchy-pgo
        repo1-retention-full: "30" # days
        repo1-retention-full-type: "time"
        repo1-s3-uri-style: path
        # R2
        # repo2-block: "y"
        # repo2-bundle: "y"
        # repo2-path: /crunchy-pgo
        # repo2-retention-full: "7" # days
        # repo2-retention-full-type: "time"
        # repo2-s3-uri-style: path
        # NFS
        # repo3-block: "y"
        # repo3-bundle: "y"
        # repo3-path: /crunchy-pgo
        # repo3-retention-full: "30" # days
        # repo3-retention-full-type: "time"
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-backup
      repos:
        - name: repo1
          s3: &minio
            bucket: "postgres"
            endpoint: "s3.homelab.internal:9000"
            region: "us-east-1"
          schedules:
            full: "30 1 * * 0" # Sunday at 01:30
            differential: "30 1 * * 1-6" # Mon-Sat at 01:30
            incremental: "30 3-23 * * *" # Every hour except 01:30-2:30
        # - name: repo2 # R2
        #   s3: &r2
        #     bucket: "postgres"
        #     endpoint: "${CF_ACCOUNT_TAG}.r2.cloudflarestorage.com"
        #     region: "us-east-1"
        #   schedules:
        #     full: "0 2 * * 0" # Sunday at 02:00
        #     incremental: "0 2 * * 1-6/2" # Mon-Sat at 02:00, every 2nd day
        # - name: repo3
        #   volume: &nfs
        #     volumeClaimSpec:
        #       storageClassName: ""
        #       volumeName: "postgres"
        #       accessModes: ["ReadWriteMany"]
        #       resources:
        #         requests:
        #           storage: 1Mi
        #   schedules:
        #     full: "15 1 * * 0" # Sunday at 01:15
        #     differential: "15 1 * * 1-6" # Mon-Sat at 01:15
        #     incremental: "15 3-23 * * *" # Every hour except 01:30-2:30

  # enable only if need imports
  # dataSource:
  #   pgbackrest:
  #     stanza: db
  #     configuration: *backupConfig
  #     global: *backupFlag
  #     repo:
  #       name: repo1
  #       s3: *minio

  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M

  proxy:
    pgBouncer:
      port: 5432
      replicas: *replica
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-pgbouncer
      config:
        global:
          pool_mode: "transaction" # pgBouncer is set to transaction for Authentik. Grafana requires session https://github.com/grafana/grafana/issues/74260#issuecomment-1702795311. Everything else is happy with transaction
          client_tls_sslmode: prefer
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: "pgbouncer"

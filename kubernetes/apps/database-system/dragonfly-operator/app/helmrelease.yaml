---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name dragonfly-operator
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: gitops-system
  maxHistory: 2
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      dragonfly-operator:
        strategy: RollingUpdate
        serviceAccount:
          identifier: *name
        containers:
          app:
            image:
              repository: ghcr.io/dragonflydb/operator
              tag: v1.1.11@sha256:11cef45ec1079b9d97930fc99ecd08ba29d4eca55cdb45887cb0ac40ee4e4d24
            command: ["/manager"]
            args:
              - --health-probe-bind-address=:8081
              - --metrics-bind-address=:8080
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /readyz
                    port: *port
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *name

    serviceAccount:
      dragonfly-operator: {}
    rbac:
      roles:
        dragonfly-operator:
          type: ClusterRole
          rules:
            - apiGroups: ["coordination.k8s.io"]
              resources: ["leases"]
              verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
            - apiGroups: [""]
              resources: ["events"]
              verbs: ["create", "patch"]
            - apiGroups: [""]
              resources: ["pods", "services"]
              verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
            - apiGroups: ["apps"]
              resources: ["statefulsets"]
              verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
            - apiGroups: ["dragonflydb.io"]
              resources: ["dragonflies"]
              verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
            - apiGroups: ["dragonflydb.io"]
              resources: ["dragonflies/finalizers"]
              verbs: ["update"]
            - apiGroups: ["dragonflydb.io"]
              resources: ["dragonflies/status"]
              verbs: ["get", "patch", "update"]
      bindings:
        dragonfly-operator:
          type: ClusterRoleBinding
          roleRef:
            identifier: *name
          subjects:
            - identifier: *name

    service:
      app:
        controller: *name
        ports:
          http:
            port: *port
          metrics:
            port: 8080
    serviceMonitor:
      app:
        serviceName: *name
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

---
# yaml-language-server: $schema=https://kubernetes-schemas.noirprime.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: rook-ceph-cluster
  maxHistory: 1
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    clusterName: &cluster_namespace storage-system
    csiDriverNamePrefix: *cluster_namespace
    operatorNamespace: *cluster_namespace
    monitoring:
      enabled: true
      createPrometheusRules: true
    route:
      dashboard:
        host:
          name: rook.noirprime.com
          path: /
          pathType: PathPrefix
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    toolbox:
      enabled: false
    cephClusterSpec:
      cephConfig:
        global:
          bdev_enable_discard: "true"
          bdev_async_discard_threads: "1"
          osd_class_update_on_start: "false"
          device_failure_prediction_mode: local # requires mgr module
        mgr:
          mgr/crash/warn_recent_interval: "7200" # 2h
      cleanupPolicy:
        wipeDevicesFromOtherClusters: true
      crashCollector:
        disable: false
      csi:
        readAffinity:
          enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://vmsingle-victoria-metrics-cluster.monitoring-system.svc.cluster.local:8428
        # prometheusEndpoint: http://prometheus-operated.monitoring-system.svc.cluster.local:9090
      mgr:
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      storage:
        useAllNodes: true
        useAllDevices: false
        deviceFilter: ^sd[b-z] # test only; ref:https://rook.io/docs/rook/v1.14/CRDs/Cluster/ceph-cluster-crd/?h=usealldevices#storage-selection-settings
        config:
          osdsPerDevice: "1"
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
          parameters:
            compression_mode: passive
            target_size_ratio: 0.8
        storageClass:
          name: ceph-block
          isDefault: true
          allowVolumeExpansion: true
          mountOptions:
            - discard
          parameters:
            imageFormat: "2"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: *cluster_namespace
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: *cluster_namespace
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: *cluster_namespace
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: ceph-block-snapshot
      isDefault: true
      deletionPolicy: Delete
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPools:
            - name: default
              replicated:
                size: 3
            - name: erasurecoded
              erasureCoded:
                dataChunks: 2
                codingChunks: 1
              parameters:
                compression_mode: passive
          preserveFilesystemOnDelete: true
          metadataServer:
            activeCount: 1
            activeStandby: true
        storageClass:
          name: ceph-filesystem
          pool: erasurecoded
          allowVolumeExpansion: true
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: *cluster_namespace
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: *cluster_namespace
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: *cluster_namespace
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            replicated:
              size: 3
          preservePoolsOnDelete: true
          # endpint-url:http://rook-ceph-rgw-ceph-objectstore.storage-system.svc.cluster.local
          gateway:
            port: 80
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 1Gi
            instances: 1
        storageClass:
          name: ceph-bucket
        ingress:
          enabled: false

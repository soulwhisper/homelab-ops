---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: rook-ceph-cluster
  dependsOn:
    - name: rook-ceph
      namespace: storage-system
    - name: snapshot-controller
      namespace: storage-system
  values:
    clusterName: &cluster_namespace storage-system
    csiDriverNamePrefix: *cluster_namespace
    operatorNamespace: *cluster_namespace
    monitoring:
      enabled: true
      createPrometheusRules: true
    toolbox:
      enabled: false
    cephClusterSpec:
      cephConfig:
        global:
          bdev_enable_discard: "true"
          bdev_async_discard_threads: "1"
          osd_class_update_on_start: "false"
          device_failure_prediction_mode: local # requires mgr module
        mgr:
          mgr/crash/warn_recent_interval: "7200" # 2h
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.monitoring-system.svc.cluster.local:9090
      mgr:
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      resources:
        mgr:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            memory: 2Gi
        mon:
          requests:
            cpu: 50m
            memory: 512Mi
          limits:
            memory: 1Gi
        osd:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            memory: 6Gi
        mgr-sidecar:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 256Mi
      storage:
        useAllNodes: true
        useAllDevices: false
        deviceFilter: nvme
        config:
          osdsPerDevice: "1"
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: WaitForFirstConsumer
          parameters:
            imageFormat: "2"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: *cluster_namespace
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: *cluster_namespace
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: *cluster_namespace
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: ceph-block
      isDefault: false
      deletionPolicy: Delete
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - name: data0
              failureDomain: host
              replicated:
                size: 3
          metadataServer:
            # Active/passive
            activeCount: 1
            activeStandby: true
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 100m
                memory: 1Gi
            placement:
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/component: cephfilesystems.ceph.rook.io
                      app.kubernetes.io/name: ceph-mds
                      app.kubernetes.io/part-of: ceph-fs
                  whenUnsatisfiable: DoNotSchedule
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          name: ceph-fs
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: *cluster_namespace
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: *cluster_namespace
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: *cluster_namespace
            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: ceph-fs
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            replicated:
              size: 3
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 100m
                memory: 1Gi
            instances: 1
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          name: ceph-s3
          reclaimPolicy: Delete
          volumeBindingMode: Immediate
        ingress:
          enabled: false

---
# yaml-language-server: $schema=https://json.schemastore.org/helmfile
helmDefaults:
  cleanupOnFail: true
  wait: true
  waitForJobs: true
  timeout: 3600

repositories:
  - name: cilium
    url: https://helm.cilium.io

releases:
  - name: prometheus-operator-crds
    namespace: monitoring-system
    atomic: true
    chart: oci://ghcr.io/prometheus-community/charts/prometheus-operator-crds
    version: 19.1.0

  - name: cilium
    namespace: kube-system
    atomic: true
    chart: cilium/cilium
    version: 1.17.3
    values:
      - "../../apps/kube-system/cilium/app/values.yaml"
    hooks:
      - # Install gateway-api CRDs
        events:
          - postsync
        command: kubectl
        args:
          - apply
          - -f
          - https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.1/experimental-install.yaml
        showlogs: true
      - # Wait for cilium CRDs to be available
        events:
          - postsync
        command: bash
        args:
          - -c
          - until kubectl get crd ciliumbgppeeringpolicies.cilium.io ciliuml2announcementpolicies.cilium.io ciliumloadbalancerippools.cilium.io &>/dev/null; do sleep 10; done
        showlogs: true
      - # Apply cilium network configuration
        events:
          - postsync
        command: kubectl
        args:
          - apply
          - --namespace=kube-system
          - --server-side
          - --field-manager=kustomize-controller
          - --kustomize=../../apps/kube-system/cilium/config/
        showlogs: true
    needs:
      - monitoring-system/prometheus-operator-crds

  - name: coredns
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/coredns/charts/coredns
    version: 1.40.0
    values:
      - "../../apps/kube-system/coredns/app/values.yaml"
    needs:
      - kube-system/cilium

  - name: cert-manager
    namespace: security-system
    atomic: true
    chart: oci://quay.io/jetstack/charts/cert-manager
    version: v1.17.1
    values:
      - "../../apps/security-system/cert-manager/app/values.yaml"
    needs:
      - kube-system/coredns

  # only needed if previous rook need wipe, `export ROOK_DISK=` first
  # - name: wipe-rook
  #   namespace: kube-system
  #   atomic: true
  #   chart: oci://ghcr.io/bjw-s/helm/app-template
  #   version: 3.7.3
  #   values:
  #     - ./templates/wipe-rook.yaml.gotmpl
  #   needs:
  #     - kube-system/coredns

  - name: kyverno
    namespace: security-system
    atomic: true
    chart: oci://ghcr.io/kyverno/charts/kyverno
    version: v3.3.7
    values:
      - "../../apps/security-system/kyverno/app/values.yaml"
    hooks:
      - # Apply kyverno policies
        events:
          - postsync
        command: kubectl
        args:
          - apply
          - --namespace=kube-system
          - --server-side
          - --field-manager=kustomize-controller
          - --kustomize=../../apps/security-system/kyverno/policies/
        showlogs: true

  - name: flux-operator
    namespace: gitops-system
    atomic: true
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-operator
    version: 0.19.0
    values:
      - "../../apps/gitops-system/flux-operator/app/values.yaml"
    needs:
      - monitoring-system/prometheus-operator-crds

  - name: flux-instance
    namespace: gitops-system
    atomic: true
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-instance
    version: 0.19.0
    wait: false
    values:
      - "../../apps/gitops-system/flux-operator/instance/values.yaml"
    needs:
      - gitops-system/flux-operator

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name radarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: gitops-system

  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 2000
            runAsGroup: 2000
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 65534 # qnap:guest
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.27.1.10122
            env:
              HTTP_PROXY: "${HTTP_PROXY}"
              HTTPS_PROXY: "${HTTPS_PROXY}"
              NO_PROXY: "${NO_PROXY}"
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: *name
                    key: RADARR_API_KEY
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 7878
              RADARR__UPDATE__BRANCH: develop
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 20m
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true

    service:
      app:
        ports:
          http:
            port: *port

    persistence:
      app:
        existingClaim: *name
        globalMounts:
          - path: /config
      media:
        type: nfs
        server: nas.homelab.internal
        path: /mnt/Arcanum/Media
        globalMounts:
          - path: /data/nas-media

    route:
      app:
        hostnames: ["radarr.noirprime.com"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https

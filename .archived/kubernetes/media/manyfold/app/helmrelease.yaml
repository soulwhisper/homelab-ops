---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name manyfold
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: gitops-system

  values:
    controllers:
      manyfold:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 2000
            runAsGroup: 2000
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
        initContainers:
          chown-tmpdirs:
            image:
              repository: docker.io/library/alpine
              tag: "3.22"
            command:
              - /bin/sh
              - -c
            args:
              - |
                chmod o-rwx /tmp
            securityContext:
              runAsUser: 0
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: "17"
            envFrom:
              - secretRef:
                  name: manyfold-initdb
        containers:
          app:
            image:
              repository: ghcr.io/bjw-s-labs/manyfold
              tag: 0.117.0@sha256:f69ae3ec4f53ae97e14b082d19ac9caca47cc3a8993c16870e7fe15b6d50b3bb
            env:
              MULTIUSER: false
              REGISTRATION: false
              PORT: &port 3214
              REDIS_URL: redis://manyfold-dragonfly.media-apps.svc.cluster.local:6379/0
              DATABASE_URL:
                valueFrom:
                  secretKeyRef:
                    name: manyfold-pguser
                    key: uri
              SECRET_KEY_BASE:
                valueFrom:
                  secretKeyRef:
                    name: *name
                    key: MANYFOLD_SECRET_KEY
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 20m
              limits:
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true

    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["model.noirprime.com"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https

    persistence:
      app:
        existingClaim: *name
        advancedMounts:
          manyfold:
            app:
              - path: /app
      tmpfs:
        type: emptyDir
        advancedMounts:
          manyfold:
            app: &tmpdirs
              - path: /tmp
                subPath: tmp/host
              - path: /app/tmp
                subPath: tmp/app
              - path: /app/log
                subPath: log
            chown-tmpdirs: *tmpdirs
      media:
        type: nfs
        server: nas.homelab.internal
        path: /mnt/Arcanum/Media
        advancedMounts:
          manyfold:
            app:
              - path: /data/libraries/main
                subPath: model
